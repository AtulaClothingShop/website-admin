{"version":3,"sources":["modules/product/redux/services.js","modules/product/redux/actions.js","common-components/tags-input/index.jsx","modules/product/components/createProductModal.jsx","modules/product/components/editProductModal.jsx","modules/product/components/index.jsx"],"names":["ProductServices","getProducts","data","filterObject","sendRequestToServer","method","url","process","REACT_APP_SERVER","params","createProduct","pick","productInfos","forEach","item","push","ProductActions","dispatch","type","ProductConstants","GET_PRODUCTS_REQUEST","then","res","GET_PRODUCTS_SUCCESS","payload","catch","error","GET_PRODUCTS_FAILURE","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAILURE","useStyles","makeStyles","theme","chip","margin","spacing","TagsInput","props","classes","id","selectedTags","placeholder","tags","other","React","useState","inputValue","setInputValue","selectedItem","setSelectedItem","handleKeyDown","event","key","newSelectedItem","indexOf","target","value","trim","replace","length","slice","useEffect","handleDelete","splice","className","onChange","getInputProps","onKeyDown","onBlur","onFocus","inputProps","TextField","InputProps","startAdornment","map","Chip","tabIndex","label","onDelete","handleInputChange","defaultProps","dialogPaper","height","width","dialogContent","overflowX","tableCellInput","actions","FormikCreateProductModal","withFormik","mapPropsToValues","name","validationSchema","Yup","shape","required","min","max","description","oneOf","open","handleClose","values","setProductInfos","sizeRanges","setSizeRanges","colors","setColors","_productInfos","size","color","buyPrice","sellPrice","Dialog","onClose","paper","fullWidth","aria-labelledby","DialogTitle","DialogContent","root","Grid","container","xs","FormControl","autoFocus","handleChange","errors","FormHelperText","InputLabel","Select","labelId","MenuItem","items","Card","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableBody","index","variant","disableUnderline","e","toString","handleProductBuyPrice","handleProductSellPrice","DialogActions","Button","onClick","disabled","_","isEmpty","connect","state","product","price","quantity","handleProductPrice","handleProductQuantity","expand","setExpand","openCreateModal","setOpenCreateModal","openEditModal","setOpenEditModal","handleOpenCreateModal","handleOpenEditModal","handleSearch","useCallback","debounce","console","log","leading","products","titleHeading","CardContent","alignItems","sm","IconButton","icon","faAngleDoubleUp","faAngleDoubleDown","TableContainer","code","totalQuantity","Box","style"],"mappings":"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","file":"static/js/4.e9cc99a6.chunk.js","sourcesContent":["/* eslint-disable no-undef */\nimport { pick } from 'lodash'\n\n// Helpers\nimport { sendRequestToServer, filterObject } from '../../../helpers'\n\nexport const ProductServices = {\n  getProducts,\n  createProduct\n}\n\nfunction getProducts(data) {\n  data = filterObject(data, ['page', 'limit'])\n\n  return sendRequestToServer({\n    method: 'GET',\n    url: `${process.env.REACT_APP_SERVER}/v1/product`,\n    params: data\n  })\n}\n\nfunction createProduct(data) {\n  data = pick(data, ['name', 'description', 'type', 'sizeRanges', 'colors', 'productInfos'])\n\n  let productInfos = []\n  data.productInfos.forEach((item) => {\n    productInfos.push(pick(item, ['size', 'color', 'buyPrice', 'sellPrice']))\n  })\n\n  data.productInfos = productInfos\n\n  return sendRequestToServer({\n    method: 'POST',\n    url: `${process.env.REACT_APP_SERVER}/v1/product`,\n    data: data\n  })\n}\n","import { ProductServices } from './services'\nimport { ProductConstants } from './constants'\n\nexport const ProductActions = {\n  getProducts,\n  createProduct\n}\n\nfunction getProducts(data) {\n  return (dispatch) => {\n    dispatch({\n      type: ProductConstants.GET_PRODUCTS_REQUEST\n    })\n    ProductServices.getProducts(data)\n      .then((res) => {\n        dispatch({\n          type: ProductConstants.GET_PRODUCTS_SUCCESS,\n          payload: res.data\n        })\n      })\n      .catch((error) => {\n        dispatch({\n          type: ProductConstants.GET_PRODUCTS_FAILURE,\n          error: error\n        })\n      })\n  }\n}\n\nfunction createProduct(data) {\n  return (dispatch) => {\n    dispatch({\n      type: ProductConstants.CREATE_PRODUCT_REQUEST\n    })\n    ProductServices.createProduct(data)\n      .then((res) => {\n        dispatch({\n          type: ProductConstants.CREATE_PRODUCT_SUCCESS,\n          payload: res.data\n        })\n      })\n      .catch((error) => {\n        dispatch({\n          type: ProductConstants.CREATE_PRODUCT_FAILURE,\n          error: error\n        })\n      })\n  }\n}\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Chip from '@material-ui/core/Chip'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Downshift from 'downshift'\nimport './tagsInput.css'\n\nconst useStyles = makeStyles((theme) => ({\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  }\n}))\n\nexport function TagsInput({ ...props }) {\n  const classes = useStyles()\n  const { id, selectedTags, placeholder, tags, ...other } = props\n  const [inputValue, setInputValue] = React.useState('')\n  const [selectedItem, setSelectedItem] = React.useState([])\n  useEffect(() => {\n    setSelectedItem(tags)\n  }, [tags])\n  useEffect(() => {\n    selectedTags(selectedItem)\n  }, [selectedItem, selectedTags])\n\n  function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      const newSelectedItem = [...selectedItem]\n      const duplicatedValues = newSelectedItem.indexOf(event.target.value.trim())\n\n      if (duplicatedValues !== -1) {\n        setInputValue('')\n        return\n      }\n      if (!event.target.value.replace(/\\s/g, '').length) return\n\n      newSelectedItem.push(event.target.value.trim())\n      setSelectedItem(newSelectedItem)\n      setInputValue('')\n    }\n    if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n      setSelectedItem(selectedItem.slice(0, selectedItem.length - 1))\n    }\n  }\n  function handleChange(item) {\n    let newSelectedItem = [...selectedItem]\n    if (newSelectedItem.indexOf(item) === -1) {\n      newSelectedItem = [...newSelectedItem, item]\n    }\n    setInputValue('')\n    setSelectedItem(newSelectedItem)\n  }\n\n  const handleDelete = (item) => () => {\n    const newSelectedItem = [...selectedItem]\n    newSelectedItem.splice(newSelectedItem.indexOf(item), 1)\n    setSelectedItem(newSelectedItem)\n  }\n\n  function handleInputChange(event) {\n    setInputValue(event.target.value)\n  }\n  return (\n    <div className='downshift-multiple'>\n      <Downshift id={id} inputValue={inputValue} onChange={handleChange} selectedItem={selectedItem}>\n        {({ getInputProps }) => {\n          const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\n            onKeyDown: handleKeyDown,\n            placeholder\n          })\n          return (\n            <div>\n              <TextField\n                InputProps={{\n                  startAdornment: selectedItem.map((item) => (\n                    <Chip key={item} tabIndex={-1} label={item} className={classes.chip} onDelete={handleDelete(item)} />\n                  )),\n                  onBlur,\n                  onChange: (event) => {\n                    handleInputChange(event)\n                    onChange(event)\n                  },\n                  onFocus\n                }}\n                {...other}\n                {...inputProps}\n              />\n            </div>\n          )\n        }}\n      </Downshift>\n    </div>\n  )\n}\nTagsInput.defaultProps = {\n  tags: []\n}\nTagsInput.propTypes = {\n  selectedTags: PropTypes.func.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string)\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TableBody,\n  TableRow,\n  TableCell,\n  Grid,\n  Card,\n  TableHead,\n  Table,\n  FormControl,\n  MenuItem,\n  InputLabel,\n  Select,\n  FormHelperText\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { withFormik } from 'formik'\nimport * as Yup from 'yup'\nimport _ from 'lodash'\n\n// Components\nimport { TagsInput } from '../../../common-components'\n\n// Actions\nimport { ProductActions } from '../redux/actions'\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    height: '80vh',\n    width: '80vh'\n  },\n  dialogContent: {\n    overflowX: 'hidden'\n  },\n  tableCellInput: {\n    width: '30%'\n  }\n}))\n\nfunction CreateProductModal(props) {\n  const { open, handleClose, values } = props\n  const classes = useStyles()\n  const [productInfos, setProductInfos] = useState([{}, {}])\n  const [sizeRanges, setSizeRanges] = useState([])\n  const [colors, setColors] = useState([])\n\n  useEffect(() => {\n    let _productInfos = []\n    sizeRanges.forEach((size) => {\n      colors.forEach((color) => {\n        _productInfos.push({\n          size: size,\n          color: color,\n          buyPrice: '',\n          sellPrice: ''\n        })\n      })\n    })\n\n    setProductInfos(_productInfos)\n  }, [sizeRanges, colors])\n\n  const handleSelecetedSizeTags = (items) => {\n    setSizeRanges(items)\n  }\n\n  const handleSelecetedColorTags = (items) => {\n    setColors(items)\n  }\n\n  const handleProductBuyPrice = (e, index) => {\n    let _productInfos = productInfos\n    if (index < _productInfos.length) {\n      _productInfos[index].buyPrice = e.target.value.toString()\n    }\n\n    setProductInfos(_productInfos)\n  }\n\n  const handleProductSellPrice = (e, index) => {\n    let _productInfos = productInfos\n    if (index < _productInfos.length) {\n      _productInfos[index].sellPrice = e.target.value.toString()\n    }\n\n    setProductInfos(_productInfos)\n  }\n\n  const handleCreateProduct = () => {\n    props.createProduct({\n      ...props.values,\n      sizeRanges: sizeRanges,\n      colors: colors,\n      productInfos: productInfos\n    })\n    handleClose()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} classes={{ paper: classes.dialogPaper }} fullWidth={true} aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Create New Product</DialogTitle>\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <FormControl fullWidth margin='normal'>\n                  <TextField\n                    autoFocus\n                    margin='dense'\n                    id='name'\n                    label='Name'\n                    fullWidth\n                    value={values.name}\n                    onChange={props.handleChange}\n                    error={!!props.errors.name}\n                  />\n                  <FormHelperText error={!!props.errors.name}>{props.errors.name}</FormHelperText>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth margin='normal'>\n                  <TextField\n                    autoFocus\n                    margin='dense'\n                    id='description'\n                    label='Description'\n                    fullWidth\n                    value={values.description}\n                    onChange={props.handleChange}\n                    error={!!props.errors.description}\n                  />\n                  <FormHelperText error={!!props.errors.description}>{props.errors.description}</FormHelperText>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth>\n                  <InputLabel id='type-select-label'>Type</InputLabel>\n                  <Select\n                    labelId='type-select-label'\n                    id='type-select'\n                    label='Type'\n                    value={values.type}\n                    onChange={props.handleChange('type')}\n                  >\n                    <MenuItem value=''>\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={'CAKE'}>CAKE</MenuItem>\n                    <MenuItem value={'CANDY'}>CANDY</MenuItem>\n                    <MenuItem value={'OTHER'}>OTHER</MenuItem>\n                  </Select>\n                  <FormHelperText error={!!props.errors.type}>{props.errors.type}</FormHelperText>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <TagsInput\n                  selectedTags={handleSelecetedSizeTags}\n                  fullWidth\n                  autoFocus\n                  margin='dense'\n                  id='size-ranges'\n                  label='Size Ranges'\n                  placeholder='Add size'\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TagsInput\n                  selectedTags={handleSelecetedColorTags}\n                  autoFocus\n                  margin='dense'\n                  id='colors'\n                  label='Colors'\n                  placeholder='Add color'\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Card>\n              <Table className='table-hover table-alternate text-nowrap' stickyHeader aria-label='sticky table'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell className='text-center'>No.</TableCell>\n                    <TableCell className='text-center'>Size</TableCell>\n                    <TableCell className='text-center'>Color</TableCell>\n                    <TableCell>Buy Price</TableCell>\n                    <TableCell>Sell Price</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {productInfos?.length > 0 &&\n                    productInfos.map((item, index) => (\n                      <TableRow key={'product-info' + index}>\n                        <TableCell>\n                          <div className='text-center'>{index + 1}</div>\n                        </TableCell>\n                        <TableCell className='text-center'>\n                          <span className='font-weight-bold'>{item.size}</span>\n                        </TableCell>\n                        <TableCell className='text-center'>\n                          <span className='font-weight-bold'>{item.color}</span>\n                        </TableCell>\n                        <TableCell classes={{ root: classes.tableCellInput }}>\n                          <TextField\n                            variant='standard' // <== changed this\n                            id={'buyprice' + index}\n                            placeholder='Buy Price'\n                            type='number'\n                            InputProps={{\n                              disableUnderline: true // <== added this\n                            }}\n                            onChange={(e) => handleProductBuyPrice(e, index)}\n                          />\n                        </TableCell>\n                        <TableCell classes={{ root: classes.tableCellInput }}>\n                          <TextField\n                            variant='standard' // <== changed this\n                            id={'sellprice' + index}\n                            placeholder='Sell Price'\n                            type='number'\n                            InputProps={{\n                              disableUnderline: true // <== added this\n                            }}\n                            onChange={(e) => handleProductSellPrice(e, index)}\n                          />\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </Card>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleCreateProduct} color='primary' disabled={!_.isEmpty(props.errors)}>\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\n// Connect state redux\nfunction mapState(state) {\n  const { product } = state\n  return { product }\n}\nconst actions = {\n  createProduct: ProductActions.createProduct\n}\n\n// Formik\nconst FormikCreateProductModal = withFormik({\n  mapPropsToValues() {\n    // Init form field\n    return {\n      name: '',\n      type: ''\n    }\n  },\n  validationSchema: Yup.object().shape({\n    // Validate form field\n    name: Yup.string()\n      .required('Name is required')\n      .min(5, 'Name must have min 5 characters')\n      .max(10, 'Name have max 10 characters'),\n    description: Yup.string(),\n    type: Yup.string()\n      .required('Type is required')\n      .oneOf(['CAKE', 'CANDY', 'OTHER'])\n  })\n})(CreateProductModal)\n\nexport default connect(mapState, actions)(FormikCreateProductModal)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TableBody,\n  TableRow,\n  TableCell,\n  Grid,\n  Card,\n  TableHead,\n  Table,\n  FormControl,\n  MenuItem,\n  InputLabel,\n  Select,\n  FormHelperText\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { withFormik } from 'formik'\nimport * as Yup from 'yup'\nimport _ from 'lodash'\n\n// Components\nimport { TagsInput } from '../../../common-components'\n\n// Actions\nimport { ProductActions } from '../redux/actions'\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    height: '70vh',\n    width: '70vh'\n  },\n  dialogContent: {\n    overflowX: 'hidden'\n  },\n  tableCellInput: {\n    width: '30%'\n  }\n}))\n\nfunction EditProductModal(props) {\n  const { open, handleClose, values } = props\n  const classes = useStyles()\n  const [productInfos, setProductInfos] = useState([{}, {}])\n  const [sizeRanges, setSizeRanges] = useState([])\n  const [colors, setColors] = useState([])\n\n  useEffect(() => {\n    let _productInfos = []\n    sizeRanges.forEach((size) => {\n      colors.forEach((color) => {\n        _productInfos.push({\n          size: size,\n          color: color,\n          price: '',\n          quantity: 0\n        })\n      })\n    })\n\n    setProductInfos(_productInfos)\n  }, [sizeRanges, colors])\n\n  const handleSelecetedSizeTags = (items) => {\n    setSizeRanges(items)\n  }\n\n  const handleSelecetedColorTags = (items) => {\n    setColors(items)\n  }\n\n  const handleProductPrice = (e, index) => {\n    let _productInfos = productInfos\n    if (index < _productInfos.length) {\n      _productInfos[index].price = e.target.value.toString()\n    }\n\n    setProductInfos(_productInfos)\n  }\n\n  const handleProductQuantity = (e, index) => {\n    let _productInfos = productInfos\n    if (index < _productInfos.length) {\n      _productInfos[index].quantity = e.target.value\n    }\n\n    setProductInfos(_productInfos)\n  }\n\n  const handleCreateProduct = () => {\n    props.createProduct({\n      ...props.values,\n      sizeRanges: sizeRanges,\n      colors: colors,\n      productInfos: productInfos\n    })\n    handleClose()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} classes={{ paper: classes.dialogPaper }} fullWidth={true} aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Create New Product</DialogTitle>\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <FormControl fullWidth margin='normal'>\n                  <TextField\n                    autoFocus\n                    margin='dense'\n                    id='name'\n                    label='Name'\n                    fullWidth\n                    value={values.name}\n                    onChange={props.handleChange}\n                    error={!!props.errors.name}\n                  />\n                  <FormHelperText error={!!props.errors.name}>{props.errors.name}</FormHelperText>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth>\n                  <InputLabel id='type-select-label'>Type</InputLabel>\n                  <Select\n                    labelId='type-select-label'\n                    id='type-select'\n                    label='Type'\n                    value={values.type}\n                    onChange={props.handleChange('type')}\n                  >\n                    <MenuItem value=''>\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={'CAKE'}>CAKE</MenuItem>\n                    <MenuItem value={'CANDY'}>CANDY</MenuItem>\n                    <MenuItem value={'OTHER'}>OTHER</MenuItem>\n                  </Select>\n                  <FormHelperText error={!!props.errors.type}>{props.errors.type}</FormHelperText>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <TagsInput\n                  selectedTags={handleSelecetedSizeTags}\n                  fullWidth\n                  autoFocus\n                  margin='dense'\n                  id='size-ranges'\n                  label='Size Ranges'\n                  placeholder='Add size'\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TagsInput\n                  selectedTags={handleSelecetedColorTags}\n                  autoFocus\n                  margin='dense'\n                  id='colors'\n                  label='Colors'\n                  placeholder='Add color'\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Card>\n              <Table className='table-hover table-alternate text-nowrap' stickyHeader aria-label='sticky table'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell className='text-center'>No.</TableCell>\n                    <TableCell className='text-center'>Size</TableCell>\n                    <TableCell className='text-center'>Color</TableCell>\n                    <TableCell>Price</TableCell>\n                    <TableCell>Quantity</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {productInfos?.length > 0 &&\n                    productInfos.map((item, index) => (\n                      <TableRow key={'product-info' + index}>\n                        <TableCell>\n                          <div className='text-center'>{index + 1}</div>\n                        </TableCell>\n                        <TableCell className='text-center'>\n                          <span className='font-weight-bold'>{item.size}</span>\n                        </TableCell>\n                        <TableCell className='text-center'>\n                          <span className='font-weight-bold'>{item.color}</span>\n                        </TableCell>\n                        <TableCell classes={{ root: classes.tableCellInput }}>\n                          <TextField\n                            variant='standard' // <== changed this\n                            id={'price' + index}\n                            placeholder='Price'\n                            type='number'\n                            InputProps={{\n                              disableUnderline: true // <== added this\n                            }}\n                            onChange={(e) => handleProductPrice(e, index)}\n                          />\n                        </TableCell>\n                        <TableCell classes={{ root: classes.tableCellInput }}>\n                          <TextField\n                            variant='standard' // <== changed this\n                            id={'quantity' + index}\n                            placeholder='Quantity'\n                            type='number'\n                            InputProps={{\n                              disableUnderline: true // <== added this\n                            }}\n                            onChange={(e) => handleProductQuantity(e, index)}\n                          />\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </Card>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleCreateProduct} color='primary' disabled={!_.isEmpty(props.errors)}>\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\n// Connect state redux\nfunction mapState(state) {\n  const { product } = state\n  return { product }\n}\nconst actions = {\n  createProduct: ProductActions.createProduct\n}\n\n// Formik\nconst FormikCreateProductModal = withFormik({\n  mapPropsToValues() {\n    // Init form field\n    return {\n      name: '',\n      type: ''\n    }\n  },\n  validationSchema: Yup.object().shape({\n    // Validate form field\n    name: Yup.string()\n      .required('Name is required')\n      .min(5, 'Name must have min 5 characters')\n      .max(10, 'Name have max 10 characters'),\n    type: Yup.string()\n      .required('Type is required')\n      .oneOf(['CAKE', 'CANDY', 'OTHER'])\n  })\n})(EditProductModal)\n\nexport default connect(mapState, actions)(FormikCreateProductModal)\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Fragment, useEffect, useState, useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDoubleDown, faAngleDoubleUp } from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  TableBody,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Box,\n  IconButton,\n  Grid,\n  TextField,\n  Button,\n  CardContent,\n  Card,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@material-ui/core'\n\nimport { debounce } from 'lodash'\n\n// Layout\nimport { PageTitle } from '../../../layout-components'\n\n// Actions\nimport { ProductActions } from '../redux/actions'\n\n// Component\nimport CreateProductModal from '../components/createProductModal'\nimport EditProductModal from '../components/editProductModal'\n\nfunction ProductManagement(props) {\n  const { product } = props\n  const [expand, setExpand] = useState(false)\n  const [openCreateModal, setOpenCreateModal] = useState(false)\n  const [openEditModal, setOpenEditModal] = useState(false)\n\n  useEffect(() => {\n    props.getProducts()\n  }, [])\n\n  const handleOpenCreateModal = () => {\n    setOpenCreateModal(!openCreateModal)\n  }\n\n  const handleOpenEditModal = () => {\n    setOpenEditModal(!openEditModal)\n  }\n\n  const handleExpand = () => {\n    setExpand(!expand)\n  }\n\n  const handleSearch = useCallback(\n    debounce(\n      () => {\n        console.log('click')\n      },\n      2000,\n      { leading: 1 }\n    ),\n    []\n  )\n  let products = product?.products\n  return (\n    <Fragment>\n      {/* Page title */}\n      <PageTitle titleHeading={`Product management`} handleOpenCreateModal={handleOpenCreateModal} />\n\n      {/* Modal Create Product */}\n      <CreateProductModal open={openCreateModal} handleClose={handleOpenCreateModal} />\n\n      {/* Modal Edit Product */}\n      <EditProductModal open={openEditModal} handleClose={handleOpenEditModal} product={product} />\n\n      {/* Page Body */}\n      <Grid container spacing={4}>\n        {/* Search Field */}\n        <Grid item xs={12}>\n          <Card className='shop-card'>\n            <CardContent>\n              <Grid container className='grid-container' alignItems='center' spacing={5}>\n                <Grid item sm={3} className='grid-item'>\n                  <TextField id='code-field' label='Code' variant='outlined' size='small' fullWidth={true} />\n                </Grid>\n                <Grid item sm={3} className='grid-item'>\n                  <TextField id='name-field' label='Name' variant='outlined' size='small' fullWidth={true} />\n                </Grid>\n                <Grid item sm={3} className='grid-item'>\n                  <FormControl variant='outlined' fullWidth={true} size='small'>\n                    <InputLabel id='type-select-label'>Type</InputLabel>\n                    <Select\n                      labelId='type-select-label'\n                      id='type-select'\n                      // value={age}\n                      // onChange={handleChange}\n                      label='Type'\n                    >\n                      <MenuItem value=''>\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={'CAKE'}>CAKE</MenuItem>\n                      <MenuItem value={'CANDY'}>CANDY</MenuItem>\n                      <MenuItem value={'OTHER'}>OTHER</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item sm={1} className='grid-item'>\n                  <IconButton color='primary' size='medium' onClick={() => handleExpand()}>\n                    {expand ? <FontAwesomeIcon icon={faAngleDoubleUp} /> : <FontAwesomeIcon icon={faAngleDoubleDown} />}\n                  </IconButton>\n                </Grid>\n                <Grid item sm={2}>\n                  <Button variant='contained' color='primary' className='btn-bool' onClick={() => handleSearch()} fullWidth={true}>\n                    SEARCH\n                  </Button>\n                </Grid>\n              </Grid>\n              {expand && (\n                <Grid container spacing={5}>\n                  <Grid item sm={3}>\n                    <TextField id='outlined-basic1' label='Outlined' variant='outlined' size='small' fullWidth={true} />\n                  </Grid>\n                  <Grid item sm={3}>\n                    <TextField id='outlined1' label='Outlined' variant='outlined' size='small' fullWidth={true} />\n                  </Grid>\n                </Grid>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Table */}\n        <Grid item xs={12}>\n          <Card>\n            <CardContent>\n              <TableContainer className='mb-4'>\n                <Table className='table-hover table-alternate text-nowrap' stickyHeader aria-label='sticky table'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className='text-center'>No.</TableCell>\n                      <TableCell className='text-center'>Code</TableCell>\n                      <TableCell className='text-center'>Name</TableCell>\n                      <TableCell className='text-center'>Type</TableCell>\n                      <TableCell className='text-center'>Size Ranges</TableCell>\n                      <TableCell className='text-center'>Total Quantity</TableCell>\n                      <TableCell className='text-center'>Actions</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {products?.items?.length > 0 &&\n                      products.items.map((item, index) => (\n                        <TableRow key={item.id}>\n                          <TableCell>\n                            <div className='text-center'>{index + 1}</div>\n                          </TableCell>\n                          <TableCell className='text-center'>\n                            <span className='font-weight-bold'>{item.code}</span>\n                          </TableCell>\n                          <TableCell className=''>\n                            <span className=''>{item.name}</span>\n                          </TableCell>\n                          <TableCell className='text-center'>\n                            <span className=''>{item.type}</span>\n                          </TableCell>\n                          <TableCell className='text-center'>\n                            <span className=''>\n                              {item.sizeRanges.map((size, index) => {\n                                if (index === 0) {\n                                  return size\n                                } else {\n                                  return ', ' + size\n                                }\n                              })}\n                            </span>\n                          </TableCell>\n                          <TableCell className='text-center'>\n                            <span className=''>{item.totalQuantity}</span>\n                          </TableCell>\n                          <TableCell className='text-center'>\n                            <Box>\n                              <IconButton color='primary' size='small' onClick={() => handleOpenEditModal()}>\n                                <FontAwesomeIcon icon={['fas', 'edit']} />\n                              </IconButton>\n                              <IconButton style={{ color: '#d32f2f' }} size='small'>\n                                <FontAwesomeIcon icon={['fas', 'ellipsis-h']} />\n                              </IconButton>\n                            </Box>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  )\n}\n\nfunction mapState(state) {\n  const { product } = state\n  return { product }\n}\nconst actions = {\n  getProducts: ProductActions.getProducts\n}\n\nexport default connect(mapState, actions)(ProductManagement)\n"],"sourceRoot":""}